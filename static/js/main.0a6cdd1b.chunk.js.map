{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filtering","setFiltering","query","setQuery","applyQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","appliedQuery","setAppliedQuery","todosList","filterQuery","useCallback","f","timerId","clearTimeout","args","debounce","filteredTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a6cdd1b.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodo?.id === todo.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  filtering: string;\n  setFiltering: (filter:string) => void;\n  query: string;\n  setQuery: (query: string) => void;\n  applyQuery: (query: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  filtering,\n  setFiltering,\n  query,\n  setQuery,\n  applyQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filtering}\n            onChange={(event) => setFiltering(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n            applyQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                applyQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(user => setSelectedUser(user));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={setSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst debounce = (f: (query: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filtering, setFiltering] = useState('all');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosList => setTodos(todosList));\n  }, [todos]);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const filteringTodos = (todosList: Todo[] | null, filterQuery: string) => {\n    if (!todosList) {\n      return null;\n    }\n\n    return todosList.filter(todo => {\n      switch (filtering) {\n        case 'all':\n          return todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n        case 'active':\n          return !todo.completed\n            && todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n        case 'completed':\n          return todo.completed\n            && todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  const filteredTodos = filteringTodos(todos, appliedQuery);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filtering={filtering}\n                setFiltering={setFiltering}\n                query={query}\n                setQuery={setQuery}\n                applyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos && <Loader />}\n\n              {filteredTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}